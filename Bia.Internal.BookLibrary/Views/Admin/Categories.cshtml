@model CategoriesViewModel

@{
    ViewData["Title"] = "Категории";
    string sortBy = ViewBag.SortBy;
    string sortOrder = ViewBag.SortOrder;
    int pageNumber = ViewBag.PageNumber;
    int pageSize = ViewBag.PageSize;
    int totalPages = ViewBag.TotalPages;
}

<link href="~/css/table_books.css" rel="stylesheet" />
<link href="~/css/category.css" rel="stylesheet" />

<section class="main_section">
    <section class="container">
        <div class="row">
            <div class="breadcrumb_control">
                <nav>
                    <ol class="breadcrumb breadcrumb_conteiner">
                        <li class="breadcrumb-item breadcrumb_link"><a class="" href="@Url.Action("Index","Home")">Главная</a></li>
                        <li class="breadcrumb-item breadcrumb_text" aria-current="page">Хранитель библиотеки</li>
                    </ol>
                </nav>
                <div class="books_title_btn_control_book">
                    <a class="books_title_btn_control_book_a" data-bs-toggle="modal" data-bs-target="#addCategory">
                        Добавить категорию
                        <img src="~/icons/add_book.svg" />
                    </a>
                    <a href="@Url.Action("ExportCategoryToExcel", "Admin")" class="books_title_btn_control_book_a">
                        Выгрузить таблицу
                        <img src="~/icons/download_book_table.svg" />
                    </a>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <div>
                    <div class="books_switching_admin btn-group d-flex">
                        <a href="@Url.Action("Requests","Admin", new { sortBy = "id", sortOrder = "asc",
                           pageNumber = 1, pageSize = 50 })" class="btn btn-bia-admin_switching">Запрошенные книги</a>
                        <a href="@Url.Action("TakenBooks","Admin", new { sortBy = "id", sortOrder = "asc",
                           pageNumber = 1, pageSize = 50 })" class="btn btn-bia-admin_switching">Выданные книги</a>
                        <a href="@Url.Action("Manage","Admin", new { sortBy = "title", sortOrder = "asc",
                           pageNumber = 1, pageSize = 50 })" class="btn btn-bia-admin_switching">Управление книгами</a>
                        <a href="@Url.Action("Authors","Admin", new { sortBy = "title", sortOrder = "asc",
                           pageNumber = 1, pageSize = 50 })" class="btn btn-bia-admin_switching">Авторы</a>
                        <a href="@Url.Action("Categories", "Admin", new { sortBy = "id", sortOrder = "asc",
                           pageNumber = 1, pageSize = 50 })" class="btn btn-bia-admin_switching active">Категории</a>
                        <a href="@Url.Action("Reviews","Admin", new { sortBy = "id", sortOrder = "asc",
                           pageNumber = 1, pageSize = 50 })" class="btn btn-bia-admin_switching">Отзывы</a>
                        <a href="@Url.Action("Users","Admin", new { sortBy = "title", sortOrder = "asc",
                           pageNumber = 1, pageSize = 50 })" class="btn btn-bia-admin_switching">Пользователи</a>
                    </div>
                </div>
                <div>
                    <div class="table_conteiner table-responsive">
                        @*Table Load*@
                        @*!!!*@
                        @*Table Data*@
                        <table class="table table-borderless @(Model.Categories.Count == 0 ? "" : "table-striped table-hover") table-books">
                            <thead>
                                <tr>
                                    <th scope="col" class="sortable table_book_th" data-column="id">
                                        <div class="table_book_th_div">
                                            ID
                                            <img src="~/icons/sort.svg" />
                                        </div>
                                    </th>
                                    <th scope="col" class="sortable table_book_th" data-column="title">
                                        <div class="table_book_th_div">
                                            Категории
                                            <img src="~/icons/sort.svg" />
                                        </div>
                                    </th>
                                    <th scope="col" class="sortable table_book_th" data-column="authors">
                                        <div class="table_book_th_div">
                                            Книг в системе
                                            <img src="~/icons/sort.svg" />
                                        </div>
                                    </th>
                                    <th scope="col" class="sortable table_book_th" data-column="categories">
                                        <div class="table_book_th_div">
                                            Действия
                                            <img src="~/icons/sort.svg" />
                                        </div>
                                    </th>
                                </tr>
                            </thead>
                            @if (Model.Categories.Count > 0)
                            {
                                <tbody>
                                    @foreach (var category in Model.Categories)
                                    {
                                        <tr>
                                            <td class="col-1">
                                                @category.Key.CategoryId
                                            </td>
                                            <td class="col-8">
                                                @(char.ToUpper(@category.Key.CategoryName[0]) + @category.Key.CategoryName.Substring(1).ToLower())
                                            </td>
                                            <td class="col-2">
                                                @category.Value
                                            </td>
                                            <td class="col-1">
                                                <div class="request_div_action">
                                                    <div>
                                                        <img class="tooltip_hover" data-bs-toggle="tooltip"
                                                             data-bs-placement="bottom" data-bs-title="Редактировать"
                                                             src="~/icons/edit_book.svg"
                                                             onmouseenter="this.src='/icons/edit_book_blue.svg'"
                                                             onmouseleave="this.src='/icons/edit_book.svg'"
                                                             onclick="editCategory(this)">
                                                    </div>
                                                    <div>
                                                        <img class="tooltip_hover deleteRequestBtn" data-bs-toggle="tooltip"
                                                             data-bs-placement="bottom" data-bs-title="Удалить"
                                                             src="~/icons/trash_basket.svg"
                                                             onmouseenter="this.src='/icons/trash_basket_blue.svg'"
                                                             onmouseleave="this.src='/icons/trash_basket.svg'"
                                                             data-category-name="@category.Key.CategoryName"
                                                             data-category-id="@category.Key.CategoryId"
                                                             onclick="openModalDelCategory(this)">
                                                        @* onclick="DeleteCategory(@category.Key.CategoryId)" *@
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            }
                            else
                            {
                                <tbody>
                                    <tr>
                                        <td class="table_not_book_td" colspan="4">
                                            <div class="table_not_book">
                                                Ничего не найдено
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                            }
                        </table>
                    </div>
                </div>
            </div>
            @if (Model.TotalCount >= 50)
            {
                <div class="row paper_pagination">
                    <nav>
                        <ul class="pagination justify-content-center paper_pagination_ul">
                            <li class="page-item @(pageNumber == 1 ? "disabled paper_pagination_btn_down_up_op" : "") paper_pagination_item">
                                <a class="page-link paper_pagination_btn_down_up" asp-action="Categories" asp-route-sortBy="@sortBy"
                                   asp-route-sortOrder="@sortOrder" asp-route-pageNumber="@(pageNumber - 1)" asp-route-pageSize="@pageSize">
                                    <img class="paper_pagination_img_left" src="~/icons/left.svg" /> Назад
                                </a>
                            </li>
                            @if (pageNumber > 4)
                            {
                                <li class="page-item paper_pagination_item">
                                    <a class="page-link paper_pagination_a" asp-action="Categories" asp-route-sortBy="@sortBy" asp-route-sortOrder="@sortOrder"
                                       asp-route-pageNumber="1" asp-route-pageSize="@pageSize">1</a>
                                </li>
                                <li class="page-item disabled paper_pagination_item">
                                    <span class="page-link paper_pagination_a">...</span>
                                </li>
                            }
                            @for (int i = pageNumber - 3; i < pageNumber; i++)
                            {
                                if (i > 0)
                                {
                                    <li class="page-item paper_pagination_item">
                                        <a class="page-link paper_pagination_a" asp-action="Categories" asp-route-sortBy="@sortBy" asp-route-sortOrder="@sortOrder"
                                           asp-route-pageNumber="@i" asp-route-pageSize="@pageSize">@i</a>
                                    </li>
                                }
                            }
                            <li class="page-item active paper_pagination_item">
                                <span class="page-link paper_pagination_a">@pageNumber</span>
                            </li>
                            @for (int i = pageNumber + 1; i <= pageNumber + 3; i++)
                            {
                                if (i <= totalPages)
                                {
                                    <li class="page-item paper_pagination_item">
                                        <a class="page-link paper_pagination_a" asp-action="Categories" asp-route-sortBy="@sortBy" asp-route-sortOrder="@sortOrder"
                                           asp-route-pageNumber="@i" asp-route-pageSize="@pageSize">@i</a>
                                    </li>
                                }
                            }
                            @if (pageNumber + 3 < totalPages)
                            {
                                <li class="page-item disabled paper_pagination_item">
                                    <span class="page-link paper_pagination_a">...</span>
                                </li>
                            }
                            @if (pageNumber + 3 < totalPages)
                            {
                                <li class="page-item paper_pagination_item">
                                    <a class="page-link paper_pagination_a" asp-action="Categories" asp-route-sortBy="@sortBy" asp-route-sortOrder="@sortOrder"
                                       asp-route-pageNumber="@totalPages" asp-route-pageSize="@pageSize">@totalPages</a>
                                </li>
                            }
                            <li class="page-item @(pageNumber == totalPages ? "disabled paper_pagination_btn_down_up_op" : "") paper_pagination_item">
                                <a class="page-link paper_pagination_btn_down_up" asp-action="Categories" asp-route-sortBy="@sortBy" asp-route-sortOrder="@sortOrder"
                                   asp-route-pageNumber="@(pageNumber + 1)" asp-route-pageSize="@pageSize">
                                    Далее <img class="paper_pagination_img_rigth" src="~/icons/right.svg" />
                                </a>
                            </li>
                        </ul>
                    </nav>
                </div>
            }
        </div>
        <div class="toast-container position-fixed top-0 end-0">
            <div id="toastSuccessAdd" class="toast toas_content_details" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex toast_succec_details">
                    <div class="toast-body">
                        Категория добавлена
                    </div>
                </div>
            </div>
        </div>
        <div class="toast-container position-fixed top-0 end-0">
            <div id="toastFailAddCategory" class="toast toas_content_details" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex toast_fail_details">
                    <div class="toast-body">
                        Категория уже добавлена
                    </div>
                </div>
            </div>
        </div>
        <div class="toast-container position-fixed top-0 end-0">
            <div id="toastSuccessDel" class="toast toas_content_details" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex toast_succec_details">
                    <div class="toast-body">
                        Категория удалена
                    </div>
                </div>
            </div>
        </div>
        <div class="toast-container position-fixed top-0 end-0">
            <div id="toastSuccessEdit" class="toast toas_content_details" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex toast_succec_details">
                    <div class="toast-body">
                        Категория изменена
                    </div>
                </div>
            </div>
        </div>
        <div class="toast-container position-fixed top-0 end-0">
            <div id="toastFailDel" class="toast toas_content_details" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex toast_fail_details">
                    <div class="toast-body">
                        Категория уже существует
                    </div>
                </div>
            </div>
        </div>
        <div class="toast-container position-fixed top-0 end-0">
            <div id="toastFail" class="toast toas_content_details" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex toast_fail_details">
                    <div class="toast-body">
                        Что-то пошло не так, попробуйте еще раз
                    </div>
                </div>
            </div>
        </div>
        <div class="toast-container position-fixed top-0 end-0">
            <div id="toastAlreadyEditing" class="toast toas_content_details" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex toast_fail_details">
                    <div class="toast-body">
                        Вы уже редактируете другую категорию. Завершите текущее редактирование
                    </div>
                </div>
            </div>
        </div>
    </section>
</section>

<form class="needs-validation" novalidate>
    <div class="modal fade" id="addCategory" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content modal-sm boks_modal_content_details">
                <div class="form-books">
                    <div class="modal-header books_modal_details">
                        <p class="modal-title books_modal_header_details" id="staticBackdropLabel">Добавление категории</p>
                        <button id="btnClose" type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3 position-relative">
                            <input autocomplete="off" type="text" class="form-control" id="categoryName" placeholder="Категория" maxlength="255" required>
                            <div id="lblCategoryName" class="floatingLabel">Категория</div>
                            <div class="invalid-feedback">
                                Заполните категорию
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer books_modal_details boks_modal_futer_btn_details col-6 mx-auto">
                        <button id="btnAddCategory" type="button" class="btn btn-bia-request_details">
                            Добавить
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<div class="modal fade" id="delCategory" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content modal-sm boks_modal_content_details">
            <div>
                <div class="modal-header books_modal_details">
                    <p class="modal-title books_modal_header_details" id="staticBackdropLabel">Вы уверены, что хотите удалить категорию?</p>
                    <button id="btnClose" type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                </div>
                <div class="modal-body books_modal_body_details">
                    <div class="modal-img-container">
                        <div class="modal-del-container position-relative">
                            <input autocomplete="off" type="text" class="form-control" id="modalCategoryName" placeholder="Категория" maxlength="255" disabled style="background-color: #FFF; cursor: text;">
                            <div id="firstNameAuthorFioLabel" class="floatingLabel" style="display: block;">Категория</div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer books_modal_details boks_modal_futer_btn_details col-6 mx-auto">
                    <input type="hidden" id="modalDelCategoryId" />
                    <button id="btnDelCategory" type="button" class="btn btn-bia-request_details" onclick="DeleteCategory()">
                        Удалить
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>

        $(document).ready(function () {
            //
            var txtBoxCategoryName = $('#categoryName');
            var lblCategoryName = $('#lblCategoryName');

            txtBoxCategoryName.on('focus', function () {
                txtBoxCategoryName.removeClass('is-invalid');
                txtBoxCategoryName.attr('placeholder', '');
                lblCategoryName.css('display', 'block');
                lblCategoryName.css('color', '#2A74DA');
                txtBoxCategoryName.attr('style', 'border-color: #2A74DA !important');
            });

            txtBoxCategoryName.on('blur', function () {
                txtBoxCategoryName.attr('placeholder', lblCategoryName.text());
                if (txtBoxCategoryName.val()) {
                    lblCategoryName.css('color', '#7D7D7D');
                    txtBoxCategoryName.attr('style', 'border-color: #CACACA !important');
                } else {
                    lblCategoryName.css('display', 'none');
                    txtBoxCategoryName.attr('style', 'border-color: #CACACA !important');
                }
            });
            //
            $('.sortable').click(function () {
                var sortBy = $(this).data('column');
                changeSortOrder(sortBy);
            });

            function changeSortOrder(sortBy, request) {
                var currentSortOrder = '@ViewBag.SortOrder';
                var newSortOrder = (sortBy === '@ViewBag.SortBy' && currentSortOrder === 'asc') ? 'desc' : 'asc';
                var url = '@Url.Action("Categories", "Admin")' + '?sortBy=' + sortBy + '&sortOrder=' + newSortOrder +
                    '&pageNumber=' + '1' + '&pageSize=' + '@ViewBag.PageSize';
                window.location.href = url;
            }
        });

        document.addEventListener('DOMContentLoaded', (event) => {
            'use strict';

            const form = document.querySelector('.needs-validation');
            const addButton = document.getElementById('btnAddCategory');

            addButton.addEventListener('click', function (event) {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                } else {
                    AddCategory();
                }

                form.classList.add('was-validated');
            }, false);
        });

        var currentEditingRow = null;

        function editCategory(editButton) {
            if (currentEditingRow !== null) {
                $('#toastAlreadyEditing').toast('show');
                return;
            }
            //
            var row = $(editButton).closest('tr');
            var categoryCell = row.children().eq(1);
            var categoryId = row.children().eq(0).text().trim();
            var currentCategory = categoryCell.text().trim();
            var input = $('<input>', { type: 'text', value: currentCategory, class: 'form-control' });
            var editButton = $(editButton);
            var btnCell = row.children().eq(3).children();
            var editEndButton = $('<div><img class="tooltip_hover" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Закончить редактирование" src = "/icons/myrequest_returnbook.svg" onmouseenter = "this.src=\'/icons/myrequest_returnbook_blue.svg\'" onmouseleave = "this.src=\'/icons/myrequest_returnbook.svg\'"></div>');
            var exitButton = $('<div><img class="tooltip_hover" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Отменить редактирование" src="/icons/CrossExit.svg" onmouseenter="this.src=\'/icons/CrossExit_blue.svg\'" onmouseleave="this.src=\'/icons/CrossExit.svg\'"></div>');
            var deleteButton = btnCell.find('.deleteRequestBtn');
            //
            currentEditingRow = row;
            //
            btnCell.prepend(exitButton);
            btnCell.prepend(editEndButton);
            categoryCell.empty().append(input);
            input.focus();
            editButton.parent().hide()
            deleteButton.parent().hide();
            //
            editEndButton.on('click', function () {
                saveCategory(input, categoryId, editButton, editEndButton, exitButton);
            });

            exitButton.on('click', function () {
                cancelEdit(editButton, deleteButton, exitButton, editEndButton, categoryCell, currentCategory);
            });

            editEndButton.find('.tooltip_hover').tooltip();
            exitButton.find('.tooltip_hover').tooltip();
        }

        function cancelEdit(editButton, deleteButton, exitButton, editEndButton, categoryCell, originalCategory) {
            editEndButton.find('.tooltip_hover').tooltip('dispose');
            exitButton.find('.tooltip_hover').tooltip('dispose');
            categoryCell.text(originalCategory);
            editButton.parent().show();
            deleteButton.parent().show();
            exitButton.remove();
            editEndButton.remove();
            currentEditingRow = null;
        }

        function saveCategory(input, categoryId, editButton, editEndButton, exitButton) {
            var newCategory = input.val();
            // categoryCell.text(newCategory);
            $.ajax({
                url: '@Url.Action("EditCategory", "Admin")',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ idCategory: categoryId, newCategoryName: newCategory }),
                success: function (data) {
                    if (data.status === 'Success') {
                        $('#toastSuccessEdit').toast('show');
                        setTimeout(function () {
                            editButton.show();
                            exitButton.remove();
                            editEndButton.find('.tooltip_hover').tooltip('dispose');
                            exitButton.find('.tooltip_hover').tooltip('dispose');
                            window.location.reload();
                        }, 700);
                    } else {
                        if (data.details === 'Категория уже существует') {
                            $('#toastFailDel').toast('show');
                        }
                        else {
                            $('#toastFail').toast('show');
                        }
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.error('Ошибка при выполнении запроса: ' + textStatus);
                }
            });
            //
            currentEditingRow = null;
        }

        function AddCategory() {
            var categoryName = $('#categoryName').val().replace(/\s+/g, ' ').trim();
            //
            var isCategoryName = categoryName.length > 0;
            if (isCategoryName) {
                $('#btnAddCategory').addClass('disabled');
                $.ajax({
                    url: '@Url.Action("AddCategory", "Admin")',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(categoryName),
                    success: function (data) {
                        if (data.status === 'Success') {
                            $('#toastSuccessAdd').toast('show');
                            setTimeout(function () {
                                window.location.reload();
                            }, 2000);
                        } else {
                            if (data.details === 'Уже существует') {
                                $('#toastFailAddCategory').toast('show');
                            }
                            else {
                                $('#toastFail').toast('show');
                            }
                            $('#btnAddCategory').removeClass('disabled');
                        }
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.error('Ошибка при выполнении запроса: ' + textStatus);
                    }
                });
            }
            else {
                if (!isCategoryName) {
                    $('#categoryName').removeClass('is-valid').addClass('is-invalid');
                } else {
                    $('#categoryName').removeClass('is-invalid').addClass('is-valid');
                }
                $('#toastFail').toast('show');
            }
        }

        function DeleteCategory() {
            var categoryId = $('#modalDelCategoryId').val();
            if (categoryId.length > 0) {
                $('#btnDelCategory').prop('disabled', true);
                //
                $.ajax({
                    url: '@Url.Action("DeleteCategory", "Admin")',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(categoryId),
                    success: function (data) {
                        if (data.status === 'Success') {
                            $('#toastSuccessDel').toast('show');
                            setTimeout(function () {
                                window.location.reload();
                            }, 900);
                        } else {
                            $('#toastFail').toast('show');
                        }
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.error('Ошибка при выполнении запроса: ' + textStatus);
                    }
                });
            }
            $('#btnDelCategory').prop('disabled', false);
        }

        function openModalDelCategory(element) {
            var categoryName = $(element).attr('data-category-name');
            var categoryId = $(element).attr('data-category-id');
            //
            $('#modalCategoryName').val(categoryName);
            $('#modalDelCategoryId').val(categoryId);
            //
            $('#delCategory').modal('show');
        }

    </script>
}